using System;
using System.Data;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Collections.Generic;
using AutoMapper;
using {rootnamespace}.Application.Common.Interfaces;
using {rootnamespace}.Application.Common.Mappings;
using {rootnamespace}.Application.Common.Models;
using {selectns}.{nameofPlural}.DTOs;
using {rootnamespace}.Domain.Entities;
using {rootnamespace}.Domain.Events;
using MediatR;
using FluentValidation;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Localization;

namespace {namespace}
{
    public class Import{nameofPlural}Command: IRequest<Result>
    {
        public string FileName { get; set; }
        public byte[] Data { get; set; }
    }
    public class Create{nameofPlural}TemplateCommand : IRequest<byte[]>
    {
        public IEnumerable<string> Fields { get; set; }
        public string SheetName { get; set; }
    }

    public class Import{nameofPlural}CommandHandler : 
                 IRequestHandler<Create{nameofPlural}TemplateCommand, byte[]>,
                 IRequestHandler<Import{nameofPlural}Command, Result>
    {
        private readonly IApplicationDbContext _context;
        private readonly IMapper _mapper;
        private readonly IStringLocalizer<Import{nameofPlural}CommandHandler> _localizer;
        private readonly IExcelService _excelService;

        public Import{nameofPlural}CommandHandler(
            IApplicationDbContext context,
            IExcelService excelService,
            IStringLocalizer<Import{nameofPlural}CommandHandler> localizer,
            IMapper mapper
            )
        {
            _context = context;
            _localizer = localizer;
            _excelService = excelService;
            _mapper = mapper;
        }
        public async Task<Result> Handle(Import{nameofPlural}Command request, CancellationToken cancellationToken)
        {
           //TODO:Implementing Import{nameofPlural}CommandHandler method 
           throw new System.NotImplementedException();
        }
        public async Task<byte[]> Handle(Create{nameofPlural}TemplateCommand request, CancellationToken cancellationToken)
        {
            //TODO:Implementing Import{nameofPlural}CommandHandler method 
            var fields = new string[] {
      
                };
            var result = await _excelService.CreateTemplateAsync(fields, _localizer["{nameofPlural}"]);
            return result;
        }
    }
}

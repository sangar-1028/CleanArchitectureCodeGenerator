using System.Threading;
using System.Threading.Tasks;
using AutoMapper;
using {rootnamespace}.Application.Common.Interfaces;
using {rootnamespace}.Application.Common.Mappings;
using {rootnamespace}.Application.Common.Models;
using {selectns}.{nameofPlural}.DTOs;
using {rootnamespace}.Domain.Entities;
using {rootnamespace}.Domain.Events;
using MediatR;
using Microsoft.Extensions.Localization;

namespace {namespace}
{
    public class Delete{itemname}Command: IRequest<Result>
    {
      
    }
    public class DeleteChecked{nameofPlural}Command : IRequest<Result>
    {
     
    }

    public class Delete{itemname}CommandHandler : 
                 IRequestHandler<Delete{itemname}Command, Result>,
                 IRequestHandler<DeleteChecked{nameofPlural}Command, Result>,
    {
        private readonly IApplicationDbContext _context;
        private readonly IMapper _mapper;
        private readonly IStringLocalizer<Delete{itemname}CommandHandler> _localizer;
        public Delete{itemname}CommandHandler(
            IApplicationDbContext context,
            IStringLocalizer<Delete{itemname}CommandHandler> _localizer,
             IMapper mapper
            )
        {
            _context = context;
            _localizer = localizer;
            _mapper = mapper;
        }
        public async Task<Result> Handle(Delete{itemname}Command request, CancellationToken cancellationToken)
        {
           //TODO:Implementing Delete{itemname}CommandHandler method 
           throw new System.NotImplementedException();
        }

        public async Task<Result> Handle(DeleteChecked{nameofPlural}Command request, CancellationToken cancellationToken)
        {
           //TODO:Implementing DeleteChecked{nameofPlural}CommandHandler method 
           throw new System.NotImplementedException();
        }
    }
}

@page "/pages/{nameofPlural}/edit/{id:int}"
@using CleanArchitecture.Blazor.Application.Features.{nameofPlural}.Commands.Update
@using CleanArchitecture.Blazor.Application.Features.{nameofPlural}.Queries.GetById
@inherits MudComponentBase
@inject IValidationService Validator
@inject IStringLocalizer<{nameofPlural}> L

<PageTitle>@Title</PageTitle>
<Breadcrumbs OnSaveButtonClick="Submit" Saving="_saving" BreadcrumbItems="_breadcrumbItems"></Breadcrumbs>
<MudContainer Class="mt-3" MaxWidth="MaxWidth.Small">
@if (model != null)
{
    <MudCard Class="pa-2">
        <MudCardHeader>
            <CardHeaderContent>
                 <MudText Typo="Typo.h6">@Title</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
        <MudForm Model="@model" @ref="@_form" Validation="@(Validator.ValidateValue(model))">
            <MudGrid>
                {mudFormFieldDefinition}
            </MudGrid>
        </MudForm>
        </MudCardContent>
        <MudCardActions Class="d-flex justify-end gap-2">
                    <MudLoadingButton Color="Color.Primary" DropShadow="false" Loading="@_saving" Variant="Variant.Outlined" OnClick="Submit">@ConstantString.Save</MudLoadingButton>
        </MudCardActions>
        </MudCard>
    }
</MudContainer>
 

@code {
    public string? Title { get; private set; }
    [Parameter]
    public int Id { get; set; }
    MudForm? _form;
    private bool _saving = false;
    private bool _savingnew = false;
    private List<BreadcrumbItem> _breadcrumbItems = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: "/"),
        new BreadcrumbItem("{nameofPlural}", href: "/pages/{nameofPlural}")
    };
    private Update{itemname}Command? model;
    protected override async Task OnInitializedAsync()
    {
        Title = L["Edit {itemname}"];
        var itemDto = await Mediator.Send(new Get{itemname}ByIdQuery() { Id = Id });
        if (itemDto is not null)
        {
            model = Mapper.Map<Update{itemname}Command>(itemDto);
            _breadcrumbItems.Add(new BreadcrumbItem(itemDto.Name, href: $"/pages/{nameofPlural}/edit/{Id}"));
        }

    }
    async Task Submit()
    {
        try
        {
            _saving = true;
            await _form!.Validate().ConfigureAwait(false);
            if (!_form!.IsValid)
                return;
            var result = await Mediator.Send(model);
            if (result.Succeeded)
            {
                Snackbar.Add(ConstantString.SaveSuccess, MudBlazor.Severity.Info);
            }
            else
            {
                Snackbar.Add(result.ErrorMessage, MudBlazor.Severity.Error);
            }
        }
        finally
        {
            _saving = false;
        }
    }
}
